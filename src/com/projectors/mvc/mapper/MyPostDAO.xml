<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.projectors.mvc.dao.IMyPostDAO">

	<!-- 샘플 <select resultType="com.projectors.mvc.RecruitDTO" id="countRecruitMember"> 
		SELECT SUM(COUNTALL) AS COUNTALL , SUM(COUNTPOS) AS COUNTPOS , RECRUITNO 
		FROM RECRUITPOSITIONVIEW WHERE RECRUITNO LIKE '%' || #{recruitNo } GROUP 
		BY RECRUITNO </select> -->

	<!-- 현재 모집 공고 정보 가져오기 -->
<!-- 
	<select id="presentRecruit"
		resultType="com.projectors.mvc.MyPostDTO">
		SELECT REC.RECRUIT_NO AS RECRUITNO, REC.TITLE AS RECRUITNAME, REC.PRJ_START AS PRJSTART
		, REC.PRJ_END AS PRJEND
		, REC.CREATED_DATE AS CREATEDDATE, (REC.CREATED_DATE + 13 ) AS DEADLINE
		FROM RECRUIT REC
		WHERE REC.PIN_NO=#{pinNo} AND REC.CREATED_DATE > SYSDATE-14 AND
		REC.RECRUIT_NO NOT IN (SELECT RECRUIT_NO FROM PROJECT)
	</select>
 -->
 	<select id="presentRecruit"
		resultType="com.projectors.mvc.dto.MyPostDTO">
		SELECT REC.RECRUIT_NO AS RECRUITNO, REC.TITLE AS RECRUITNAME, REC.PRJ_START AS PRJSTART
		, REC.PRJ_END AS PRJEND
		, REC.CREATED_DATE AS CREATEDDATE, (REC.CREATED_DATE + 13 ) AS DEADLINE
		FROM RECRUIT REC
		WHERE REC.PIN_NO=#{pinNo} AND REC.CREATED_DATE > SYSDATE-14
	</select>
 
 
 
 	<!-- 현재 올려놓은 모집 공고가 있는지  -->
<!-- 	
	<select id="presentCheck" resultType="java.lang.Integer">
		SELECT COUNT(*) AS COUNT
		FROM RECRUIT REC
		WHERE REC.PIN_NO=#{pinNo}
		AND REC.CREATED_DATE >
		SYSDATE-14 AND REC.RECRUIT_NO NOT IN (SELECT RECRUIT_NO FROM PROJECT)
	</select>
 -->	
 	
	<select id="presentCheck" resultType="java.lang.Integer">
		SELECT COUNT(*) AS COUNT
		FROM RECRUIT REC
		WHERE REC.PIN_NO=#{pinNo}
		AND REC.CREATED_DATE > SYSDATE-14 
	</select>
 
 	<!-- 모집 취소가 가능한 상태인지  -->
	<select id="checkDelete" resultType="java.lang.Integer">
		SELECT COUNT(*) AS COUNT
		FROM FIRST_CK FS
		LEFT JOIN APPLY AP ON FS.APPLY_NO = AP.APPLY_NO
		LEFT JOIN RECRUIT_POS REP ON AP.RECRUIT_POS_NO = REP.RECRUIT_POS_NO
		LEFT JOIN RECRUIT REC ON REP.RECRUIT_NO = REC.RECRUIT_NO
		WHERE REC.RECRUIT_NO = #{recruitNo}
	</select>
 
    <!-- 모집 취소시 수행될 DELETE 쿼리문 (1), (2), (3), (4)  -->
    <!-- (1) 1차 합격자 delete -->
 	<delete id="deleteFirstCk">
		DELETE 
		FROM FIRST_CK
		WHERE FIRST_CK_NO IN
		(SELECT FS.FIRST_CK_NO
		FROM FIRST_CK FS
		LEFT JOIN APPLY AP ON FS.APPLY_NO = AP.APPLY_NO
		LEFT JOIN RECRUIT_POS REP ON AP.RECRUIT_POS_NO = REP.RECRUIT_POS_NO 
		LEFT JOIN RECRUIT REC ON REP.RECRUIT_NO = REC.RECRUIT_NO
		WHERE REC.RECRUIT_NO=#{recruitNo})
 	</delete>
 	
	<!-- (2) 지원서 delete  -->
 	<delete id="deleteApply">
		DELETE 
		FROM APPLY
		WHERE APPLY_NO IN
		(SELECT AP.APPLY_NO
		FROM APPLY AP
		LEFT JOIN RECRUIT_POS REP ON AP.RECRUIT_POS_NO = REP.RECRUIT_POS_NO 
		LEFT JOIN RECRUIT REC ON REP.RECRUIT_NO = REC.RECRUIT_NO
		WHERE REC.RECRUIT_NO=#{recruitNo})
 	</delete>
 	
 	<!-- (3) 모집 포지션 delete -->
 	<delete id="deleteRecruitPos">
		DELETE 
		FROM RECRUIT_POS
		WHERE RECRUIT_POS_NO IN
		(SELECT REP.RECRUIT_POS_NO
		FROM RECRUIT_POS REP
		LEFT JOIN RECRUIT REC ON REP.RECRUIT_NO = REC.RECRUIT_NO
		WHERE REC.RECRUIT_NO=#{recruitNo})
 	</delete>
 	
 	<!-- (4) 공고 툴 delete -->
 	<delete id="deleteRecruitTool">
 		DELETE
		FROM RECRUIT_TOOL
		WHERE RECRUIT_NO = #{recruitNo}
 	</delete>
 	

 	<!-- (5) 공고 delete -->
 	<delete id="deleteRecruit">
		DELETE 
		FROM RECRUIT
		WHERE RECRUIT_NO=#{recruitNo}
 	</delete>
 
 
 
 
 
 
	<!-- 미열람자들 존재하는지  -->
	<select id="checkPresentNone" resultType="java.lang.Integer">
		SELECT COUNT(*) AS COUNT
		FROM APPLY AP
		LEFT
		JOIN RECRUIT_POS RP ON AP.RECRUIT_POS_NO = RP.RECRUIT_POS_NO
		LEFT
		JOIN
		RECRUIT REC ON REC.RECRUIT_NO = RP.RECRUIT_NO
		LEFT JOIN USERS US ON
		AP.PIN_NO = US.PIN_NO
		LEFT JOIN POSITION POS ON RP.POS_NO = POS.POS_NO
		WHERE REC.RECRUIT_NO=#{recruitNo} AND AP.CK_DATE IS NULL AND
		AP.APPLY_NO NOT IN (SELECT APPLY_NO FROM FIRST_CK)
	</select>
	
	<!-- 미열람자 출력 -->
	<select id="presentNone" resultType="com.projectors.mvc.dto.MyPostDTO">
	SELECT AP.APPLY_NO AS APPLYNO, AP.PIN_NO AS PINNO, RP.POS_NO AS POSNO,
	NVL(US.NICKNAME,'탈퇴회원') AS NICKNAME, POS.POS_NAME AS POSNAME, REC.RECRUIT_NO AS
	RECRUITNO, AP.CK_DATE AS CKDATE, RP.RECRUIT_POS_NO AS RECRUITPOSNO
	FROM APPLY AP
	LEFT JOIN RECRUIT_POS RP ON AP.RECRUIT_POS_NO = RP.RECRUIT_POS_NO
	LEFT JOIN RECRUIT REC ON REC.RECRUIT_NO = RP.RECRUIT_NO
	LEFT JOIN USERS US ON AP.PIN_NO = US.PIN_NO
	LEFT JOIN POSITION POS ON RP.POS_NO = POS.POS_NO
	WHERE REC.RECRUIT_NO=#{recruitNo} AND AP.CK_DATE IS NULL AND AP.APPLY_NO NOT IN
	(SELECT APPLY_NO FROM FIRST_CK)
	</select>


	<!-- 보류자들 존재하는지  -->
	<select id="checkPresentX" resultType="java.lang.Integer">
		SELECT COUNT(*) AS COUNT
		FROM APPLY AP
		LEFT JOIN RECRUIT_POS RP ON
		AP.RECRUIT_POS_NO =
		RP.RECRUIT_POS_NO
		LEFT JOIN RECRUIT REC ON
		REC.RECRUIT_NO =
		RP.RECRUIT_NO
		LEFT JOIN USERS US ON AP.PIN_NO =
		US.PIN_NO
		LEFT JOIN
		POSITION POS ON RP.POS_NO = POS.POS_NO
		WHERE
		REC.RECRUIT_NO=#{recruitNo} AND AP.CK_DATE IS NOT NULL AND AP.APPLY_NO
		NOT IN
		(SELECT APPLY_NO FROM FIRST_CK)
	</select>

	<!-- 보류자 출력  -->
	<select id="presentX" resultType="com.projectors.mvc.dto.MyPostDTO">
		SELECT AP.APPLY_NO AS APPLYNO, AP.PIN_NO AS PINNO, RP.POS_NO AS POSNO,
		NVL(US.NICKNAME,'탈퇴회원') AS NICKNAME, POS.POS_NAME AS POSNAME, REC.RECRUIT_NO AS
		RECRUITNO, AP.CK_DATE AS CKDATE, RP.RECRUIT_POS_NO AS RECRUITPOSNO  
		FROM APPLY AP
		LEFT JOIN RECRUIT_POS RP ON AP.RECRUIT_POS_NO = RP.RECRUIT_POS_NO
		LEFT JOIN RECRUIT REC ON REC.RECRUIT_NO = RP.RECRUIT_NO
		LEFT JOIN USERS US ON AP.PIN_NO = US.PIN_NO
		LEFT JOIN POSITION POS ON RP.POS_NO = POS.POS_NO
		WHERE REC.RECRUIT_NO=#{recruitNo} AND AP.CK_DATE IS NOT NULL AND AP.APPLY_NO NOT IN
		(SELECT APPLY_NO FROM FIRST_CK)
	</select>
	<!-- 1차 합격자들 존재하는지  -->
	<select id="checkPresentO" resultType="java.lang.Integer">
		SELECT COUNT(*) AS COUNT
		FROM APPLY AP
		LEFT JOIN RECRUIT_POS RP ON AP.RECRUIT_POS_NO = RP.RECRUIT_POS_NO
		LEFT JOIN RECRUIT REC ON REC.RECRUIT_NO = RP.RECRUIT_NO
		LEFT JOIN USERS US ON AP.PIN_NO = US.PIN_NO
		LEFT JOIN POSITION POS ON RP.POS_NO = POS.POS_NO
		WHERE REC.RECRUIT_NO=#{recruitNo} AND AP.APPLY_NO IN (SELECT APPLY_NO FROM FIRST_CK)
		AND AP.APPLY_NO NOT IN 
								(SELECT FS.APPLY_NO
								 FROM FIRST_CK FS 
								 LEFT JOIN FINAL FN
								 	ON FS.FIRST_CK_NO = FN.FIRST_CK_NO
								 	 WHERE FN.FINAL_NO IS NOT NULL)
	</select>
	<!-- 1차 합격자 출력  -->
	<select id="presentO" resultType="com.projectors.mvc.dto.MyPostDTO">
		SELECT AP.APPLY_NO AS APPLYNO, AP.PIN_NO AS PINNO, RP.POS_NO AS POSNO, NVL(US.NICKNAME,'탈퇴회원') AS NICKNAME,
		POS.POS_NAME AS POSNAME, REC.RECRUIT_NO AS RECRUITNO, AP.CK_DATE AS	CKDATE, RP.RECRUIT_POS_NO AS RECRUITPOSNO
		FROM APPLY AP
		LEFT JOIN RECRUIT_POS RP ON AP.RECRUIT_POS_NO =
		RP.RECRUIT_POS_NO
		LEFT JOIN RECRUIT REC ON REC.RECRUIT_NO =
		RP.RECRUIT_NO
		LEFT JOIN USERS US ON AP.PIN_NO = US.PIN_NO
		LEFT JOIN
		POSITION POS ON RP.POS_NO = POS.POS_NO
		WHERE
		REC.RECRUIT_NO=#{recruitNo} AND AP.APPLY_NO IN (SELECT APPLY_NO FROM
		FIRST_CK) AND AP.APPLY_NO NOT IN 
								(SELECT FS.APPLY_NO
								 FROM FIRST_CK FS 
								 LEFT JOIN FINAL FN
								 	ON FS.FIRST_CK_NO = FN.FIRST_CK_NO
								 	 WHERE FN.FINAL_NO IS NOT NULL)
										
	</select>
	
	<!-- 열람 처리  -->
	<update id="readApply">
		UPDATE APPLY
		SET CK_DATE = SYSDATE
		WHERE APPLY_NO=#{applyNo}
	</update>

	<!-- 모집 총원 -->
	<select id="fullCheckRecPos" resultType="java.lang.Integer">
		SELECT COUNT(RP.RECRUIT_POS_NO) AS COUNT
		FROM RECRUIT_POS RP
		LEFT JOIN POSITION POS ON RP.POS_NO =  POS.POS_NO
		WHERE RP.RECRUIT_POS_NO =#{recruitPosNo} AND RECRUIT_POS_NO IN (SELECT RP.RECRUIT_POS_NO
                                              				 FROM FIRST_CK FS
                                              				 LEFT JOIN APPLY AP ON FS.APPLY_NO = AP.APPLY_NO
                                              				 LEFT JOIN RECRUIT_POS RP ON AP.RECRUIT_POS_NO = RP.RECRUIT_POS_NO
                                              				 LEFT JOIN POSITION POS ON RP.POS_NO = POS.POS_NO)	
	</select>

	<select id="postionCount" resultType="com.projectors.mvc.dto.MyPostDTO">
			SELECT SUM(COUNTALL) AS COUNTALL
		     , SUM(COUNTPOS) AS COUNTPOS
		     , POSNAME
			FROM RECRUITPOSITIONVIEW 
			WHERE RECRUITNO = #{recruitNo}
			GROUP BY POSNAME
	</select>

	<!-- 모집자가 1차 합격 시킬시 실행될 insert 구문  -->
	<insert id="firstCk">
		INSERT INTO FIRST_CK
		(FIRST_CK_NO
		, APPLY_NO
		, PASS_DATE)
		VALUES
		( 'FS'||FIRSTCKSEQ.NEXTVAL
		, #{applyNo}
		, SYSDATE)
	</insert>
	
	<!-- 공고 전제 모집 총원 구하는 메소드 -->
	<select id="recruitCount" resultType="java.lang.Integer">
		SELECT COUNT(*) AS COUNT
		FROM RECRUIT_POS RP
		WHERE RP.RECRUIT_NO=#{recruitNo}
	</select>
	
	<!-- 1차 합격자수 구하는 메소드  -->
	<select id="firstCount" resultType="java.lang.Integer">
		SELECT COUNT(*) AS COUNT
		FROM FIRST_CK FS
		LEFT JOIN APPLY AP ON FS.APPLY_NO = AP.APPLY_NO
		LEFT JOIN RECRUIT_POS RP ON AP.RECRUIT_POS_NO = RP.RECRUIT_POS_NO
		LEFT JOIN RECRUIT REC ON RP.RECRUIT_NO = REC.RECRUIT_NO
		WHERE REC.RECRUIT_NO=#{recruitNo}
	</select>	
	
	<!-- 최종 합류 자 존재하는지  -->
	<select id="checkFinal" resultType="java.lang.Integer">
		SELECT COUNT(*) AS COUNT
		FROM FINAL FN
		LEFT JOIN FIRST_CK FS ON FN.FIRST_CK_NO = FS.FIRST_CK_NO
		LEFT JOIN APPLY AP ON FS.APPLY_NO = AP.APPLY_NO
		LEFT JOIN RECRUIT_POS REP ON AP.RECRUIT_POS_NO = REP.RECRUIT_POS_NO
		LEFT JOIN RECRUIT REC ON REP.RECRUIT_NO = REC.RECRUIT_NO
		WHERE REC.RECRUIT_NO=#{recruitNo}
	</select>
	
	<!-- 최종 합류자 수 / 답변 대기자 인원 출력 + 프로젝트 생성 유무 알림용  -->
	<select id="finalCount" resultType="com.projectors.mvc.dto.MyPostDTO">
		SELECT COUNT(FN.FINAL_NO) AS FINALCOUNT, COUNT(REP.RECRUIT_POS_NO) AS TOTALCOUNT 
		FROM FINAL FN
		FULL OUTER JOIN FIRST_CK FS ON FN.FIRST_CK_NO = FS.FIRST_CK_NO
		FULL OUTER JOIN APPLY AP ON FS.APPLY_NO = AP.APPLY_NO
		FULL OUTER JOIN RECRUIT_POS REP ON AP.RECRUIT_POS_NO = REP.RECRUIT_POS_NO
		FULL OUTER JOIN RECRUIT REC ON REP.RECRUIT_NO = REC.RECRUIT_NO
		WHERE REC.RECRUIT_NO=#{recruitNo}	
	</select>
	
	<!-- 최종 합류자 출력  -->
	<select id="finalWait" resultType="com.projectors.mvc.dto.MyPostDTO">
		SELECT FN.FINAL_NO AS FINALNO, NVL(US.NICKNAME, '탈퇴회원') AS NICKNAME, POS.POS_NAME AS POSNAME, FN.FINAL_CK_DATE AS FINALCKDATE
			   , AP.APPLY_NO AS APPLYNO
		FROM FINAL FN
		LEFT JOIN FIRST_CK FS ON FN.FIRST_CK_NO = FS.FIRST_CK_NO
		LEFT JOIN APPLY AP ON FS.APPLY_NO = AP.APPLY_NO
		LEFT JOIN RECRUIT_POS REP ON AP.RECRUIT_POS_NO = REP.RECRUIT_POS_NO
		LEFT JOIN RECRUIT REC ON REP.RECRUIT_NO = REC.RECRUIT_NO
		LEFT JOIN POSITION POS ON REP.POS_NO = POS.POS_NO
		LEFT JOIN USERS US ON AP.PIN_NO = US.PIN_NO 
		WHERE REC.RECRUIT_NO=#{recruitNo}
		ORDER BY FN.FINAL_CK_DATE DESC
	</select>
	
	
	<!--▼▼▼ 나의 과거 모집 공고 관련 쿼리문  -->
	<select id="checkPastPost" resultType="java.lang.Integer">
		SELECT COUNT(*) AS COUNT
		FROM RECRUIT
		WHERE PIN_NO=#{pinNo} AND SYSDATE-14 >= CREATED_DATE
	</select>
	
	
	<select id="myPastPost" resultType="com.projectors.mvc.dto.MyPostDTO">
		SELECT REC.RECRUIT_NO AS RECRUITNO, REC.TITLE AS RECRUITNAME, REC.CREATED_DATE AS CREATEDDATE, REC.PRJ_START AS PRJSTART, REC.PRJ_END AS PRJEND, COUNT(FS.FIRST_CK_NO) AS FIRSTCKCOUNT, COUNT(REP.RECRUIT_POS_NO) AS TOTALCOUNT 
        ,PRJ.PRJ_NO AS PRJNO
		FROM RECRUIT REC
		LEFT JOIN RECRUIT_POS REP ON REC.RECRUIT_NO = REP.RECRUIT_NO
		LEFT JOIN APPLY AP ON REP.RECRUIT_POS_NO = AP.RECRUIT_POS_NO
		LEFT JOIN FIRST_CK FS ON AP.APPLY_NO = FS.APPLY_NO
		LEFT JOIN PROJECT PRJ ON REC.RECRUIT_NO = PRJ.RECRUIT_NO
		WHERE REC.PIN_NO=#{pinNo} AND SYSDATE-14 >= REC.CREATED_DATE
		GROUP BY REC.TITLE, REC.CREATED_DATE,REC.RECRUIT_NO, REC.PRJ_START, REC.PRJ_END, PRJ.PRJ_NO
	</select>
	 


</mapper>